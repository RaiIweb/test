{"version":3,"sources":["Components/Dashboard/index.js","Components/Login/index.js","App.js","reportWebVitals.js","actions/types.js","reducers/authReducer.js","reducers/index.js","providers/ReduxProvider.js","index.js"],"names":["Game","useState","IDLE","UP","DOWN","LEFT","RIGHT","DIRECTION","rounds","colors","useEffect","Ball","new","incrementedSpeed","width","height","x","this","canvas","y","moveX","moveY","speed","Paddle","side","score","move","initialize","document","querySelector","context","getContext","style","player","call","paddle","ball","running","over","turn","console","log","timer","round","color","menu","listen","endGameMenu","text","font","fillStyle","fillRect","fillText","setTimeout","Object","assign","draw","update","_resetTurn","_turnDelayIsOver","Math","random","floor","_generateRoundColor","clearRect","beginPath","setLineDash","moveTo","lineTo","lineWidth","strokeStyle","stroke","textAlign","toString","loop","requestAnimationFrame","addEventListener","key","window","keyCode","victor","loser","Date","getTime","newColor","length","Login","e","a","preventDefault","target","email","value","password","formValues","fetch","method","headers","body","JSON","stringify","login","json","result","className","onSubmit","src","alt","for","type","placeholder","name","required","checked","backgroundColor","href","App","test","useSelector","state","authState","userLoggedIn","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER_LOGIN","USER_LOGOUT","INITIAL_STATE","authReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReduxProvider","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2223ce12.chunk.js","sourcesContent":["import React, { useEffect , useState } from \"react\";\n\nfunction Game() {\n\n  const [ DIRECTION , ] = useState({\n    IDLE: 0,\n    UP: 1,\n    DOWN: 2,\n    LEFT: 3,\n    RIGHT: 4,\n  })\n\n  const [ rounds ,] = useState([5])\n  const [ colors  , ] = useState([\"#1abc9c\", \"#2ecc71\", \"#3498db\", \"#e74c3c\", \"#9b59b6\"])\n\n  useEffect(() => {\n    \n    // The ball object (The cube that bounces back and forth)\n    var Ball = {\n      new: function (incrementedSpeed) {\n        return {\n          width: 18,\n          height: 18,\n          x: this.canvas.width / 2 - 9,\n          y: this.canvas.height / 2 - 9,\n          moveX: DIRECTION.IDLE,\n          moveY: DIRECTION.IDLE,\n          speed: incrementedSpeed || 9,\n        };\n      },\n    };\n\n    // The paddle object (The two lines that move up and down)\n    var Paddle = {\n      new: function (side) {\n        return {\n          width: 18,\n          height: 70,\n          x: side === \"left\" ? 150 : this.canvas.width - 150,   // x position of paddle\n          y: this.canvas.height / 2 - 35,                 // y position of paddle\n          score: 0,\n          move: DIRECTION.IDLE,\n          speed: 8,\n        };\n      },\n    };\n\n    var Game = {\n\n      initialize: function () {\n        this.canvas = document.querySelector(\"canvas\");\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.canvas.width = 1400;          // *****************\n        this.canvas.height = 1000;         // *****************\n\n        this.canvas.style.width = this.canvas.width / 2 + \"px\";   // *****************\n        this.canvas.style.height = this.canvas.height / 2 + \"px\"; // *****************\n\n        this.player = Paddle.new.call(this, \"left\");   // **********\n        this.paddle = Paddle.new.call(this, \"right\");   // **********\n        this.ball = Ball.new.call(this);\n\n        this.paddle.speed = 8;            // **********\n        this.running = this.over = false;     // **********\n        this.turn = this.paddle;      \n\n        console.log(this.turn);          // **********\n        this.timer = this.round = 0;       // **********\n        this.color = \"#2c3e50\";            // **********\n\n        Game.menu();\n        Game.listen();\n      },\n\n      endGameMenu: function (text) {\n        // Change the canvas font size and color\n        Game.context.font = \"50px Courier New\";\n        Game.context.fillStyle = this.color;\n\n        // Draw the rectangle behind the 'Press any key to begin' text.\n        Game.context.fillRect(\n          Game.canvas.width / 2 - 350,\n          Game.canvas.height / 2 - 48,\n          700,\n          100\n        );\n\n        // Change the canvas color\n        Game.context.fillStyle = \"#ffffff\";\n\n        // Draw the end game menu text ('Game Over' and 'Winner')\n        Game.context.fillText(\n          text,\n          Game.canvas.width / 2,\n          Game.canvas.height / 2 + 15\n        );\n\n        setTimeout(function () {\n          Game = Object.assign({}, Game);\n          Game.initialize();\n        }, 3000);\n      },\n\n         // **********\n      menu: function () {\n        // Draw all the Game objects in their current state\n        console.log(Game);\n        Game.draw();\n\n        // Change the canvas font size and color\n        this.context.font = \"50px Courier New\";\n        this.context.fillStyle = this.color;\n\n        // Draw the rectangle behind the 'Press any key to begin' text.\n        this.context.fillRect(\n          this.canvas.width / 2 - 350,\n          this.canvas.height / 2 - 48,\n          700,\n          100\n        );\n\n        // Change the canvas color\n        this.context.fillStyle = \"#ffffff\";\n\n        // Draw the 'press any key to begin' text\n        this.context.fillText(\n          \"Press any key to begin\",\n          this.canvas.width / 2,\n          this.canvas.height / 2 + 15\n        );\n      },    // **********\n\n      // Update all objects (move the player, paddle, ball, increment the score, etc.)\n      update: function () {\n        if (!this.over) {\n          // If the ball collides with the bound limits - correct the x and y coords.\n          if (this.ball.x <= 0)\n            Game._resetTurn.call(this, this.paddle, this.player);\n          if (this.ball.x >= this.canvas.width - this.ball.width)\n            Game._resetTurn.call(this, this.player, this.paddle);\n          if (this.ball.y <= 0) this.ball.moveY = DIRECTION.DOWN;\n          if (this.ball.y >= this.canvas.height - this.ball.height)\n            this.ball.moveY = DIRECTION.UP;\n\n          // Move player if they player.move value was updated by a keyboard event\n          if (this.player.move === DIRECTION.UP)\n            this.player.y -= this.player.speed;\n          else if (this.player.move === DIRECTION.DOWN)\n            this.player.y += this.player.speed;\n\n          // On new serve (start of each turn) move the ball to the correct side\n          // and randomize the direction to add some challenge.\n          if (Game._turnDelayIsOver.call(this) && this.turn) {\n            this.ball.moveX =\n              this.turn === this.player ? DIRECTION.LEFT : DIRECTION.RIGHT;\n            this.ball.moveY = [DIRECTION.UP, DIRECTION.DOWN][\n              Math.round(Math.random())\n            ];\n            this.ball.y =\n              Math.floor(Math.random() * this.canvas.height - 200) + 200;\n            this.turn = null;\n          }\n\n          // If the player collides with the bound limits, update the x and y coords.\n          if (this.player.y <= 0) this.player.y = 0;\n          else if (this.player.y >= this.canvas.height - this.player.height)\n            this.player.y = this.canvas.height - this.player.height;\n\n          // Move ball in intended direction based on moveY and moveX values\n          if (this.ball.moveY === DIRECTION.UP)\n            this.ball.y -= this.ball.speed / 1.5;\n          else if (this.ball.moveY === DIRECTION.DOWN)\n            this.ball.y += this.ball.speed / 1.5;\n          if (this.ball.moveX === DIRECTION.LEFT)\n            this.ball.x -= this.ball.speed;\n          else if (this.ball.moveX === DIRECTION.RIGHT)\n            this.ball.x += this.ball.speed;\n\n          // Handle paddle (AI) UP and DOWN movement\n          if (this.paddle.y > this.ball.y - this.paddle.height / 2) {\n            if (this.ball.moveX === DIRECTION.RIGHT)\n              this.paddle.y -= this.paddle.speed / 1.5;\n            else this.paddle.y -= this.paddle.speed / 4;\n          }\n          if (this.paddle.y < this.ball.y - this.paddle.height / 2) {\n            if (this.ball.moveX === DIRECTION.RIGHT)\n              this.paddle.y += this.paddle.speed / 1.5;\n            else this.paddle.y += this.paddle.speed / 4;\n          }\n\n          // Handle paddle (AI) wall collision\n          if (this.paddle.y >= this.canvas.height - this.paddle.height)\n            this.paddle.y = this.canvas.height - this.paddle.height;\n          else if (this.paddle.y <= 0) this.paddle.y = 0;\n\n          // Handle Player-Ball collisions\n          if (\n            this.ball.x - this.ball.width <= this.player.x &&\n            this.ball.x >= this.player.x - this.player.width\n          ) {\n            if (\n              this.ball.y <= this.player.y + this.player.height &&\n              this.ball.y + this.ball.height >= this.player.y\n            ) {\n              this.ball.x = this.player.x + this.ball.width;\n              this.ball.moveX = DIRECTION.RIGHT;\n            }\n          }\n\n          // Handle paddle-ball collision\n          if (\n            this.ball.x - this.ball.width <= this.paddle.x &&\n            this.ball.x >= this.paddle.x - this.paddle.width\n          ) {\n            if (\n              this.ball.y <= this.paddle.y + this.paddle.height &&\n              this.ball.y + this.ball.height >= this.paddle.y\n            ) {\n              this.ball.x = this.paddle.x - this.ball.width;\n              this.ball.moveX = DIRECTION.LEFT;\n            }\n          }\n        }\n\n        // Handle the end of round transition\n        // Check to see if the player won the round.\n        console.log(this.player.score);\n\n        if (this.player.score === rounds[this.round]) {\n          // Check to see if there are any more rounds/levels left and display the victory screen if\n          // there are not.\n          if (!rounds[this.round + 1]) {\n            this.over = true;\n\n            console.log(this.player.score);\n            setTimeout(function () {\n              Game.endGameMenu(\"Winner!\");\n            }, 1000);\n          } else {\n            // If there is another round, reset all the values and increment the round number.\n            this.color = this._generateRoundColor();\n            this.player.score = this.paddle.score = 0;\n            this.player.speed += 0.5;\n            this.paddle.speed += 1;\n            this.ball.speed += 1;\n            this.round += 1;\n          }\n        }\n        // Check to see if the paddle/AI has won the round.\n        else if (this.paddle.score === rounds[this.round]) {\n          this.over = true;\n          console.log(this.player.score);\n          setTimeout(function () {\n            Game.endGameMenu(\"Game Over!\");\n          }, 1000);\n        }\n      },\n\n      // Draw the objects to the canvas element\n      draw: function () {\n        // Clear the Canvas\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // Set the fill style to black\n        this.context.fillStyle = this.color;\n\n        // Draw the background\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // Set the fill style to white (For the paddles and the ball)\n        this.context.fillStyle = \"#fff\";\n\n        // Draw the Player\n        this.context.fillRect(         // **********\n          this.player.x,\n          this.player.y,\n          this.player.width,\n          this.player.height\n        );\n\n        // Draw the Paddle\n        this.context.fillRect(         // **********\n          this.paddle.x,\n          this.paddle.y,\n          this.paddle.width,\n          this.paddle.height\n        );\n\n        // Draw the Ball\n        if (Game._turnDelayIsOver.call(this)) {\n          this.context.fillRect(\n            this.ball.x,                   // **********\n            this.ball.y,                     // **********\n            this.ball.width,             // **********\n            this.ball.height\n          );\n        }\n\n        // Draw the net (Line in the middle)\n        this.context.beginPath();\n        this.context.setLineDash([7, 15]);\n        this.context.moveTo(this.canvas.width / 2, this.canvas.height - 120);\n        this.context.lineTo(this.canvas.width / 2, 140);\n        this.context.lineWidth = 10;\n        this.context.strokeStyle = \"#ffffff\";\n        this.context.stroke();        \n\n        // Set the default canvas font and align it to the center\n        this.context.font = \"100px Courier New\";\n        this.context.textAlign = \"center\";\n\n        // Draw the players score (left)\n        this.context.fillText(\n          this.player.score.toString(),\n          this.canvas.width / 2 - 300,\n          200\n        );\n\n        // Draw the paddles score (right)\n        this.context.fillText(\n          this.paddle.score.toString(),\n          this.canvas.width / 2 + 300,\n          200\n        );\n\n        // Change the font size for the center score text\n        this.context.font = \"30px Courier New\";\n\n        // Draw the winning score (center)\n        this.context.fillText(\n          \"Round \" + (Game.round + 1),\n          this.canvas.width / 2,\n          35\n        );\n\n        // Change the font size for the center score value\n        this.context.font = \"40px Courier\";\n\n        // Draw the current round number\n        this.context.fillText(\n          rounds[Game.round] ? rounds[Game.round] : rounds[Game.round - 1],\n          this.canvas.width / 2,\n          100\n        );\n      },\n\n      loop: function () {\n        Game.update();\n        Game.draw();\n\n        // If the game is not over, draw the next frame.\n        if (!Game.over) requestAnimationFrame(Game.loop);\n      },\n\n      listen: function () {\n        document.addEventListener(\"keydown\", function (key) {\n          // Handle the 'Press any key to begin' function and start the game.\n          if (Game.running === false) {\n            Game.running = true;\n            window.requestAnimationFrame(Game.loop);\n          }\n\n          // Handle up arrow and w key events\n          if (key.keyCode === 38 || key.keyCode === 87)\n            Game.player.move = DIRECTION.UP;\n\n          // Handle down arrow and s key events\n          if (key.keyCode === 40 || key.keyCode === 83)\n            Game.player.move = DIRECTION.DOWN;\n        });\n\n        // Stop the player from moving when there are no keys being pressed.\n        document.addEventListener(\"keyup\", function (key) {\n          Game.player.move = DIRECTION.IDLE;\n        });\n      },\n\n      // Reset the ball location, the player turns and set a delay before the next round begins.\n      _resetTurn: function (victor, loser) {\n        this.ball = Ball.new.call(this, this.ball.speed);\n        this.turn = loser;\n        this.timer = new Date().getTime();\n\n        victor.score++;\n      },\n\n      // Wait for a delay to have passed after each turn.\n      _turnDelayIsOver: function () {\n        return new Date().getTime() - this.timer >= 1000;\n      },\n\n      // Select a random color as the background of each level/round.\n      _generateRoundColor: function () {\n        var newColor = colors[Math.floor(Math.random() * colors.length)];\n        if (newColor === this.color) return Game._generateRoundColor();\n        return newColor;\n      },\n    };\n\n    Game.initialize();\n\n  }, [])\n\n  return <canvas></canvas>;\n}\n\nexport default Game;\n","import React from \"react\";\nimport './index.css';\n\nfunction Login() {\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    console.log('form submit')\n\n    console.log(e.target.email.value)\n    console.log(e.target.password.value)\n\n    let formValues = {\n      email : e.target.email.value,\n      password : e.target.password.value\n    }\n\n    try {\n\n      let login = await fetch('https://gameback-end.herokuapp.com/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(formValues)\n      })\n\n      let result = await login.json();\n\n      console.log(result)\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <div className=\"loginwrapper\">\n      <h2>Login Form</h2>\n\n      <form onSubmit={handleSubmit} method=\"post\">\n        <div className=\"imgcontainer\">\n          <img src=\"https://www.w3schools.com/howto/img_avatar2.png\" alt=\"Avatar\" className=\"avatar\" />\n        </div>\n        <div className=\"container\">\n          <label for=\"uname\">\n            <b>Username</b>\n          </label>\n          <input\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            name=\"email\"\n            required\n          />\n\n          <label for=\"psw\">\n            <b>Password</b>\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            name=\"password\"\n            required\n          />\n\n          <button type=\"submit\">Login</button>\n          <label>\n            <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Remember\n            me\n          </label>\n        </div>\n\n        <div className=\"container\" style={{ backgroundColor: \"#f1f1f1\" }}>\n          <button type=\"button\" className=\"cancelbtn\">\n            Cancel\n          </button>\n          <span className=\"psw\">\n            Forgot <a href=\"#\">password?</a>\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React , { useEffect  } from \"react\";\nimport { BrowserRouter, Routes , Route } from \"react-router-dom\"\nimport Game from \"../src/Components/Dashboard\"\nimport Login from \"./Components/Login\"\nimport { useSelector } from \"react-redux\"\n\nimport \"./App.css\";\n\nfunction App() {\n\n   console.log('hh');\n  const test = useSelector(\n    (state) => state.authState.userLoggedIn\n    )\n\n\n\n  return (\n    \n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/game\" element={<Game />}>\n          </Route>\n          <Route exact path=\"/\" element={ test ?  <Game /> : <Login />}>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const USER_LOGIN = \"USER_LOGIN\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"","import { USER_LOGIN, USER_LOGOUT } from \"../actions\";\r\n\r\n\r\nconst INITIAL_STATE = { userLoggedIn: false }\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN: {\r\n            return {\r\n                ...state,\r\n                userLoggedIn: true,\r\n\r\n            }\r\n        }\r\n        case USER_LOGOUT: {\r\n            return INITIAL_STATE;\r\n        }\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer  from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    authState: authReducer,\r\n})","import React  from \"react\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport function ReduxProvider({ children }) {\r\n  \r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ReduxProvider } from './providers/ReduxProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider>\n      <App />\n    </ReduxProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}